"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaskBase = void 0;
const _1 = require(".");
class TaskBase {
    constructor(id, action) {
        this.id = id;
        this.action = action;
        this.state = _1.TaskState.Running;
    }
    get actionObj() {
        return this.action;
    }
    get stateObj() {
        return this.state;
    }
    get hasResult() {
        return this.state !== _1.TaskState.Running;
    }
    get isFaulted() {
        return this.state === _1.TaskState.Failed;
    }
    get isCompleted() {
        return this.state === _1.TaskState.Completed;
    }
    changeState(state) {
        if (state === _1.TaskState.Running) {
            throw Error("Cannot change Task to the RUNNING state.");
        }
        this.state = state;
    }
    setValue(isError, value, executor) {
        let newState;
        if (isError) {
            if (!(value instanceof Error)) {
                const errMessage = `Task ID ${this.id} failed but it's value was not an Exception`;
                throw new Error(errMessage);
            }
            newState = _1.TaskState.Failed;
        }
        else {
            newState = _1.TaskState.Completed;
        }
        this.changeState(newState);
        this.result = value;
        this.propagate(executor);
    }
    propagate(executor) {
        const hasCompleted = this.state !== _1.TaskState.Running;
        if (hasCompleted && this.parent !== undefined) {
            this.parent.handleCompletion(this, executor);
        }
    }
}
exports.TaskBase = TaskBase;
//# sourceMappingURL=TaskBase.js.map